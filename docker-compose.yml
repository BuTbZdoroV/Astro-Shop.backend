version: '3.8'

services:
  eureka-server:
    build: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      - SERVER_PORT=8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - microservices-net

  user-service:
    build: ./user-service
    ports:
      - "8082:8082"
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_service_db
      - SPRING_DATASOURCE_USERNAME=butbzdorov
      - SPRING_DATASOURCE_PASSWORD=102938asd

  product-service:
    build: ./product-service
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/product_service_db
      - SPRING_DATASOURCE_USERNAME=butbzdorov
      - SPRING_DATASOURCE_PASSWORD=102938asd

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - microservices-net


  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: butbzdorov
      POSTGRES_PASSWORD: 102938asd
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U butbzdorov" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data: