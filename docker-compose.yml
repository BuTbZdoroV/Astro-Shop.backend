
services:
  # --- Инфраструктура ---
 # zookeeper:
 #   image: confluentinc/cp-zookeeper:latest
 #   container_name: zookeeper
 #   ports: ["2181:2181"]
 #   environment:
 #     ZOOKEEPER_CLIENT_PORT: 2181
 #     ZOOKEEPER_TICK_TIME: 2000
 #   networks: [microservices-net]
 #   restart: unless-stopped

  #kafka:
  #  image: confluentinc/cp-kafka:7.4.1
  #  container_name: kafka
  #  depends_on: [zookeeper]
  #  ports: ["9092:9092"]  # Убрал EXTERNAL порт/
  #  environment:
  #    KAFKA_BROKER_ID: 1
  #    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  #    KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #    KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #  networks: [microservices-net]
  #  restart: unless-stopped

  chat_service_db:
    image: mongo:6.0
    container_name: chat_service_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: butbzdorov
      MONGO_INITDB_ROOT_PASSWORD: 102938asd
      MONGO_INITDB_DATABASE: chat_service_db
    networks: [ microservices-net ]
    restart: unless-stopped

  user_service_db:
    image: postgres:16
    container_name: user_service_db
    environment:
      POSTGRES_USER: butbzdorov
      POSTGRES_PASSWORD: 102938asd
      POSTGRES_DB: user_service_db
    networks: [microservices-net]
    restart: unless-stopped

  product_service_db:
    image: postgres:16
    container_name: product_service_db
    environment:
      POSTGRES_USER: butbzdorov
      POSTGRES_PASSWORD: 102938asd
      POSTGRES_DB: product_service_db
    networks: [microservices-net]
    restart: unless-stopped

  review_service_db:
    image: postgres:16
    container_name: review_service_db
    environment:
      POSTGRES_USER: butbzdorov
      POSTGRES_PASSWORD: 102938asd
      POSTGRES_DB: review_service_db
    networks: [microservices-net]
    restart: unless-stopped

  redis:
    image: redis:7.0
    container_name: redis
    networks: [microservices-net]
    restart: unless-stopped

  # --- Микросервисы ---
  user-service:
    image: butbzdorov/astro-shopbackend-user-service:latest
    container_name: user-service
    ports: ["18082:8082"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user_service_db:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: butbzdorov
      SPRING_DATASOURCE_PASSWORD: 102938asd
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      SPRING_DATA_REDIS_HOST: redis
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT-URI: https://butbzdorov-astro-shop-backend-9109.twc1.net/login/oauth2/code/google
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID: 749123856044-9idsvcuc8qjqm3b2u0d5g3l12irr7kvn.apps.googleusercontent.com
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET: 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
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE: email,profile
    depends_on:
      - user_service_db
      - redis
    networks: [microservices-net]
    restart: unless-stopped

  product-service:
    image: butbzdorov/astro-shopbackend-product-service:latest
    container_name: product-service
    ports: ["18081:8081"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://product_service_db:5432/product_service_db
      SPRING_DATASOURCE_USERNAME: butbzdorov
      SPRING_DATASOURCE_PASSWORD: 102938asd
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - product_service_db
      - redis
    networks: [microservices-net]
    restart: unless-stopped

  chat-service:
    image: butbzdorov/astro-shopbackend-chat-service:latest
    container_name: chat-service
    ports: [ "18086:8086" ]
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://butbzdorov:102938asd@chat_service_db:27017/chat_service_db?authSource=admin
      SPRING_DATA_REDIS_HOST: redis
      WEB_SERVICE_URL: http://gateway-service:8080
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
    depends_on:
      - chat_service_db
      - redis
    networks: [ microservices-net ]
    restart: unless-stopped

  review-service:
    image: butbzdorov/astro-shopbackend-review-service:latest
    container_name: review-service
    ports: ["18083:8083"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://review_service_db:5432/review_service_db
      SPRING_DATASOURCE_USERNAME: butbzdorov
      SPRING_DATASOURCE_PASSWORD: 102938asd
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_DATASOURCE_DRIVER-CLASS-NAME: org.postgresql.Driver
    depends_on:
      - review_service_db
    networks: [microservices-net]
    restart: unless-stopped

  media-service:
    image: butbzdorov/astro-shopbackend-media-service:latest
    container_name: media-service
    ports: ["18085:8085"]
    networks: [ microservices-net ]
    restart: unless-stopped

  gateway-service:
    container_name: gateway-service
    image: butbzdorov/astro-shopbackend-gateway-service:latest
    ports: [ "18080:8080" ]

    depends_on:
      - user-service
      - product-service
      - chat-service
      - review-service
      - media-service
    networks: [ microservices-net ]

networks:
  microservices-net:
    driver: bridge